{"version":3,"sources":["components/Admin/UserForm.js"],"names":["UserForm","props","dispatch","useDispatch","useState","role","setrole","history","useHistory","loading","useSelector","state","loadRole","id","a","type","axios","get","then","res","data","useLayoutEffect","className","xl","xs","onValidSubmit","e","Helpers","lang","constant","confirmsave","recheckdata","r","post","user_id","role_id","status","user","push","lg","name","required","maxLength","value","map","title","color","parse","button","save"],"mappings":"yRAoHeA,UAnGf,SAAkBC,GAChB,IAAMC,EAAWC,cADM,EAECC,mBAAS,IAFV,mBAEhBC,EAFgB,KAEVC,EAFU,KAGjBC,EAAUC,cACVC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WAwBvCG,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfZ,EAAS,CAAEa,KAAM,iBADF,SAETC,cACHC,IAAI,eACJC,MAAK,SAACC,GACLjB,EAAS,CAAEa,KAAM,iBACjBT,EAAQa,EAAIC,SAND,2CAAH,sDAYd,OAHAC,2BAAgB,WACdT,MACC,IAED,oCACE,kBAAC,IAAD,CAAKU,UAAWb,EAAU,SAAW,IACnC,kBAAC,IAAD,CAAKa,UAAU,aAAaC,GAAG,MAC7B,kBAAC,IAAD,CAAMD,UAAU,uBACd,kBAAC,IAAD,CAAYA,UAAU,qBACpB,kBAAC,IAAD,CAAKA,UAAU,sBACb,kBAAC,IAAD,CAAKE,GAAG,KACN,wBAAIF,UAAU,QA3ChB,uGA+CJ,kBAAC,IAAD,KACE,kBAAC,SAAD,CAAQG,cA/CH,SAACC,EAAGN,GACnBO,IACEC,IAAKC,SAASC,YACdF,IAAKC,SAASE,aACdb,KAHF,uCAGO,WAAOc,GAAP,SAAAlB,EAAA,6DACLZ,EAAS,CAAEa,KAAM,iBADZ,SAECC,cACHiB,KAAK,aAAc,CAClBC,QAASd,EAAKc,QACdC,QAASf,EAAKe,UAEfjB,MAAK,SAACC,GACkB,KAAnBA,EAAIC,KAAKgB,SACXlC,EAAS,CAAEa,KAAM,iBACjBY,IAAqBR,EAAIC,MAAMF,MAAK,SAACQ,GACnC,IAAIW,EAAOV,MACXpB,EAAQ+B,KAAK,IAAMD,EAAKhC,KAAO,iBAZlC,2CAHP,yDA+CY,yBAAKiB,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKiB,GAAG,KACN,kBAAC,IAAD,KACE,2BAAOjB,UAAU,sBAAjB,sEACA,kBAAC,UAAD,CACEkB,KAAK,UACLzB,KAAK,OACL0B,UAAQ,MAId,kBAAC,IAAD,CAAKF,GAAG,KACN,kBAAC,IAAD,KACE,2BAAOjB,UAAU,sBAAjB,wFACA,kBAAC,UAAD,CACEkB,KAAK,UACLzB,KAAK,SACL0B,UAAQ,EACRC,UAAU,MAEZ,4BAAQC,MAAM,IAAd,uHACGtC,EAAKuC,KAAI,SAACZ,GAAD,OACR,4BAAQW,MAAOX,EAAEG,SAAUH,EAAEa,eAOzC,wBAAIvB,UAAU,SACd,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAQwB,MAAM,WACbC,IAAMnB,IAAKoB,OAAOC","file":"static/js/12.b61dcb2b.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"functions/axiosinstance\";\nimport * as Helpers from \"functions/others\";\nimport { useHistory } from \"react-router-dom\";\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport lang from \"lang/th\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport parse from \"html-react-parser\";\nfunction UserForm(props) {\n  const dispatch = useDispatch();\n  const [role, setrole] = useState([]);\n  const history = useHistory();\n  const loading = useSelector((state) => state.loading);\n  const title = \"เพิ่มสิทธิใช้งาน\";\n  const OnSubmit = (e, data) => {\n    Helpers.ConfirmDialog(\n      lang.constant.confirmsave,\n      lang.constant.recheckdata\n    ).then(async (r) => {\n      dispatch({ type: \"SHOW_LOADING\" });\n      await axios()\n        .post(\"/user/save\", {\n          user_id: data.user_id,\n          role_id: data.role_id,\n        })\n        .then((res) => {\n          if (res.data.status != 401) {\n            dispatch({ type: \"HIDE_LOADING\" });\n            Helpers.SuccessAlert(res.data).then((e) => {\n              let user = Helpers.decode_payload();\n              history.push(\"/\" + user.role + \"/users\");\n            });\n          }\n        });\n    });\n  };\n  const loadRole = async (id) => {\n    dispatch({ type: \"SHOW_LOADING\" });\n    await axios()\n      .get(\"/user/roles\")\n      .then((res) => {\n        dispatch({ type: \"HIDE_LOADING\" });\n        setrole(res.data);\n      });\n  };\n  useLayoutEffect(() => {\n    loadRole();\n  }, []);\n  return (\n    <>\n      <Row className={loading ? \"d-none\" : \"\"}>\n        <Col className=\"order-xl-1\" xl=\"12\">\n          <Card className=\"bg-secondary shadow\">\n            <CardHeader className=\"bg-white border-0\">\n              <Row className=\"align-items-center\">\n                <Col xs=\"8\">\n                  <h2 className=\"mb-0\">{title}</h2>\n                </Col>\n              </Row>\n            </CardHeader>\n            <CardBody>\n              <AvForm onValidSubmit={OnSubmit}>\n                <div className=\"pl-lg-4\">\n                  <Row>\n                    <Col lg=\"8\">\n                      <FormGroup>\n                        <label className=\"form-control-label\">รหัสพนักงาน</label>\n                        <AvInput\n                          name=\"user_id\"\n                          type=\"text\"\n                          required\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col lg=\"4\">\n                      <FormGroup>\n                        <label className=\"form-control-label\">สิทธิการใช้งาน</label>\n                        <AvInput\n                          name=\"role_id\"\n                          type=\"select\"\n                          required\n                          maxLength=\"10\"\n                        >\n                        <option value=\"\">เลือก สิทธิการใช้งาน</option>\n                          {role.map((r) => (\n                            <option value={r.role_id}>{r.title}</option>\n                          ))}\n                          </AvInput>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </div>\n                <hr className=\"my-4\" />\n                <div className=\"text-center\">\n                  <Button color=\"primary\">\n                  {parse(lang.button.save)}\n                  </Button>\n                </div>\n              </AvForm>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default UserForm;\n"],"sourceRoot":""}